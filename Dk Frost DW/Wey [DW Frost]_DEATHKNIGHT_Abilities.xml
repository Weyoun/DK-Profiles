<?xml version="1.0" encoding="utf-8" ?><DEATHKNIGHT><Ability><Name>Pillar of Frost</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Pillar = PQ_Pillar
local TargetValidation = TargetValidation

if PQR_SpellAvailable(PQ_Pillar)
and PQ_CD
and IsSpellInRange(GetSpellInfo(PQ_PlagueStrike), &amp;quot;target&amp;quot;) == 1 then

	if PQ_HasEngineering == true then
		RunMacroText(&amp;quot;/use 10&amp;quot;)
	end

	CastSpellByName(GetSpellInfo(PQ_Pillar), &amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Raise Dead</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_RaiseDead = PQ_RaiseDead
local SpecialUnit = SpecialUnit

if PQ_CanCast
and PQ_CD
and PQR_SpellAvailable(PQ_RaiseDead)
	and (SpecialUnit() or PQ_CD == CD_Auto)
	and IsSpellInRange(GetSpellInfo(PQ_PlagueStrike), &amp;quot;target&amp;quot;) == 1 then
		CastSpellByName(GetSpellInfo(PQ_RaiseDead), &amp;quot;player&amp;quot;)
		
		if PQ_Has2MinCD == true then
			for _,spell in ipairs(PQ_2MinCDList) do
				if IsSpellKnown(spell) then
					CastSpellByName(GetSpellInfo(spell), &amp;quot;player&amp;quot;)
				end
			end
		end
		
		return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Empower Rune Weapon</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Empower = PQ_Empower

if PQ_CanCast
and PQ_CD
and UnholyRunes == 0 and DeathRunes == 0 and FrostRunes == 0
and PQR_SpellAvailable(PQ_Empower)
and (SpecialUnit() or PQ_CD == CD_Auto) then
	CastSpellByName(GetSpellInfo(PQ_Empower), &amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Init</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------------------
-- Variables &amp; Sanity checks
-------------------------------------------------------------------------------
-- Load LUA data files.
if PQR_RotationStarted then
	PQR_RotationStarted = false
	
	PQR_UI = &amp;quot;ElvUI&amp;quot; -- Options: Blizzard, ElvUI
	--/run print( GetMouseFocus():GetName() or &amp;apos;unknown&amp;apos; )
	
	if PQR_UI == &amp;quot;ElvUI&amp;quot; then
		PQR_OverrideActionBarButton1 = &amp;quot;ElvUI_Bar1Button1&amp;quot;
		PQR_OverrideActionBarButton2 = &amp;quot;ElvUI_Bar1Button2&amp;quot;
	elseif PQR_UI == &amp;quot;Blizzard&amp;quot; then
		PQR_OverrideActionBarButton1 = &amp;quot;OverrideActionBarButton1&amp;quot;
		PQR_OverrideActionBarButton2 = &amp;quot;OverrideActionBarButton2&amp;quot;
	else
		PQR_OverrideActionBarButton1 = &amp;quot;OverrideActionBarButton1&amp;quot;
		PQR_OverrideActionBarButton2 = &amp;quot;OverrideActionBarButton2&amp;quot;
	end

	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Frost_DW_Wey_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_Frost_DW_Wey_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
	
	if not PQ_DKLoaded then
		-- Create Frame
		if not PQ_Frame then 
			PQ_Frame = CreateFrame(&amp;quot;Frame&amp;quot;)
			PQ_Frame:RegisterEvent(&amp;quot;UNIT_SPELLCAST_SUCCEEDED&amp;quot;)
			PQ_Frame:SetScript(&amp;quot;OnEvent&amp;quot;, PQ_Frame_OnEvent)
			PQ_Frame:Show()
		end
		
		-- Check for 2 Min CD
		for _,spell in ipairs(PQ_2MinCDList) do
			if IsSpellKnown(spell) then
				PQ_Has2MinCD = true
				break
			end
		end
		
		RunMacroText(&amp;quot;/use 10&amp;quot;)
		
		PQ_DKLoaded = true
	end
end

-- CD Switch
if IsRightControlKeyDown() and not GetCurrentKeyBoardFocus() and GetTime() - PQ_CDTimer &amp;gt; 1 then
	PQ_CDTimer = GetTime()
	
	if not PQ_CD then
		PQ_CD = CD_BossOnly
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Mode: |cff79BAECBoss Only|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	elseif PQ_CD == CD_BossOnly then
		PQ_CD = CD_Auto
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Mode: |cff006400On|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		PQ_CD = false
		PQR_WriteToChat(&amp;quot;|cff347C2CCooldown Mode: |cffDC143COff|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end

-- Howling Blast Switch
if IsLeftControlKeyDown() and not IsRightAltKeyDown() and not GetCurrentKeyBoardFocus() and GetTime() - PQ_HBTimer &amp;gt; 1 then
	PQ_HBTimer = GetTime()
	
	if PQ_HB then
		PQ_HB = false
		PQR_WriteToChat(&amp;quot;|cff347C2CHowling Blast: |cffDC143COff|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		PQ_HB = true
		PQR_WriteToChat(&amp;quot;|cff347C2CHowling Blast: |cff79BAECOn|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end

-- AoE/Single Switch
if IsRightShiftKeyDown() and not GetCurrentKeyBoardFocus() and GetTime() - PQ_AOETimer &amp;gt; 1 then
	PQ_AOETimer = GetTime()
	
	if PQ_AOE then
		PQ_AOE = false
		PQR_SwapRotation(&amp;quot;Single Rotation (Wey [DW Frost])&amp;quot;)
	else
		PQ_AOE = true
		PQR_SwapRotation(&amp;quot;AoE Rotation (Wey [DW Frost])&amp;quot;)
	end
end

-- DnD Switch
if IsLeftAltKeyDown() and not GetCurrentKeyBoardFocus() and GetTime() - PQ_DNDTimer &amp;gt; 1 then
	PQ_DNDTimer = GetTime()
	
	if PQ_DND then
		PQ_DND = false
		PQR_WriteToChat(&amp;quot;|cff347C2CDeath and Decay: |cffDC143COff|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	else
		PQ_DND = true
		PQR_WriteToChat(&amp;quot;|cff347C2CDeath and Decay: |cff79BAECOn|cffffffff&amp;quot;, &amp;quot;Notice&amp;quot;)
	end
end

if IsMounted() then return true end

currentTime = GetTime()

if PQ_CanCast == false and PQ_GCD &amp;lt;= currentTime then PQ_CanCast = true end
if PQ_CanBT == false and PQ_BTCD &amp;lt;= currentTime then PQ_CanBT = true end
if PQ_CanImpalingSpear == false and PQ_ImpalingSpearCD &amp;lt;= currentTime then PQ_CanImpalingSpear = true end
if PQ_CanMindFreeze == false and PQ_MindFreezeCD &amp;lt;= currentTime then PQ_CanMindFreeze = true end
if PQ_ShouldPestilence == false and PQ_PestilenceCD &amp;lt;= currentTime then PQ_ShouldPestilence = true end

RunicPower = UnitPower(&amp;quot;player&amp;quot;)
PlayerHP   = 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;)

-- Rune checks
UnholyRunes = 0
FrostRunes = 0
DeathRunes = 0
FullyDepleted = 0
HalfDepleted = 0

for i=1,6,2 do
	local type = GetRuneType(i)
	local type2 = GetRuneType(i+1)
	
	local cd = select(3, GetRuneCooldown(i))
	local cd2 = select(3, GetRuneCooldown(i+1))
	
	if FullyDepleted == 0
	and cd == false
	and cd2 == false then
		if HalfDepleted == 0 then
			HalfDepleted = 1
		else
			FullyDepleted = 1
		end
	end
	
	if cd == true then
		if type == 2 then
			UnholyRunes = UnholyRunes + 1
		elseif type == 3 then
			FrostRunes = FrostRunes + 1
		else
			DeathRunes = DeathRunes + 1
		end
	end
	
	if cd2 == true then
		if type2 == 2 then
			UnholyRunes = UnholyRunes + 1
		elseif type2 == 3 then
			FrostRunes = FrostRunes + 1
		else
			DeathRunes = DeathRunes + 1
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Pause</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Horn = PQ_Horn

if not UnitAffectingCombat(&amp;quot;player&amp;quot;)
or (IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus()) then
	if not PQ_SelfBuff() and PQR_SpellAvailable(PQ_Horn) then
	CastSpellByName(GetSpellInfo(PQ_Horn), &amp;quot;player&amp;quot;)	
	end
	return true
end

TargetHP = UnitHealth(&amp;quot;target&amp;quot;) / UnitHealthMax(&amp;quot;target&amp;quot;) * 100

-- TimeToDie

--[[local health = UnitHealth(&amp;quot;target&amp;quot;)
local healthmax = UnitHealthMax(&amp;quot;target&amp;quot;)
local time = GetTime()

if UnitLevel(&amp;quot;target&amp;quot;) == -1 then
	IsBoss = true
else
	IsBoss = false
end

TargetHP = health / healthmax * 100

if not nextCalculate then nextCalculate = 0 end
if nextCalculate - time &amp;lt;= 0 then
	TimeToDie = 99
	TimeToDieCalc = TargetHP - 3 * (TargetHP / TimeToDie)
	unit =  UnitGUID(&amp;quot;target&amp;quot;)
	if CurrentTarget ~= unit then
		CurrentTarget = unit
	end

	if health == healthmax then
		Health0, Time0, Mhealth, Mtime = nil
	else
		if not Health0 then
			Health0, Time0 = health, time
			Mhealth, Mtime = health, time
		else
			Mhealth = (Mhealth + health) * 0.5
			Mtime = (Mtime + time) * 0.5

			if Mhealth &amp;gt;= Health0 then
				Health0, Time0, Mhealth, Mtime = nil
			else
				TimeToDie = health * (Time0 - Mtime) / (Mhealth - Health0)
				TimeToDieCalc = TargetHP - 3 * (TargetHP / TimeToDie)
			end
		end
	end
	nextCalculate = GetTime() + 0.5
	if SpecialUnit() then print(TimeToDie) print(TimeToDieCalc) end
end]]--</Lua><RecastDelay>100</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Death and Decay</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_DnD = PQ_DnD
local PQ_HowlingBlast = PQ_HowlingBlast

if PQ_DND
and PQ_CanCast
and UnholyRunes == 1
and UnitExists(&amp;quot;target&amp;quot;)
and PQR_SpellAvailable(PQ_DnD)
and IsSpellInRange(GetSpellInfo(PQ_HowlingBlast), &amp;quot;target&amp;quot;) == 1 then
	CastSpellByName(GetSpellInfo(PQ_DnD),nil)
	if SpellIsTargeting() then SpellCancelQueuedSpell() CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Horn of Winter</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Horn = PQ_Horn

if PQ_CanCast
and PQR_SpellAvailable(PQ_Horn) then
	CastSpellByName(GetSpellInfo(PQ_Horn), &amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Howling Blast</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HowlingBlast = PQ_HowlingBlast
local TargetValidation = TargetValidation

if PQ_CanCast
and PQ_HB and TargetValidation(&amp;quot;target&amp;quot;, PQ_HowlingBlast) then
	CastSpellByName(GetSpellInfo(PQ_HowlingBlast), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frost Strike (RP &amp;gt;= 40)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_FrostStrike = PQ_FrostStrike
local TargetValidationMelee = TargetValidationMelee

if PQ_CanCast
and TargetValidationMelee(&amp;quot;target&amp;quot;, PQ_FrostStrike)
and RunicPower &amp;gt;= 40 then
	CastSpellByName(GetSpellInfo(PQ_FrostStrike), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frost Strike (RP &amp;gt; 76)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_FrostStrike = PQ_FrostStrike
local TargetValidationMelee = TargetValidationMelee

if PQ_CanCast
and TargetValidationMelee(&amp;quot;target&amp;quot;, PQ_FrostStrike)
and RunicPower &amp;gt; 76 then
	CastSpellByName(GetSpellInfo(PQ_FrostStrike), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Howling Blast (Rime)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HowlingBlast = PQ_HowlingBlast
local PQ_Rime = PQ_Rime
local TargetValidation = TargetValidation

if PQ_CanCast
and PQ_HB and UnitBuffID(&amp;quot;player&amp;quot;, PQ_Rime)
and TargetValidation(&amp;quot;target&amp;quot;, PQ_HowlingBlast) then
	CastSpellByName(GetSpellInfo(PQ_HowlingBlast), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frost Strike (KM or RP &amp;gt; 88)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_FrostStrike = PQ_FrostStrike
local PQ_KillingMachine = PQ_KillingMachine
local TargetValidationMelee = TargetValidationMelee

if PQ_CanCast
and (UnitBuffID(&amp;quot;player&amp;quot;, PQ_KillingMachine) or RunicPower &amp;gt; 88)
and TargetValidationMelee(&amp;quot;target&amp;quot;, PQ_FrostStrike) then
	CastSpellByName(GetSpellInfo(PQ_FrostStrike), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Howling Blast (no debuff)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HowlingBlast = PQ_HowlingBlast
local PQ_FrostFever = PQ_FrostFever
local TargetValidation = TargetValidation

if PQ_CanCast
and PQ_HB and not UnitDebuffID(&amp;quot;target&amp;quot;, PQ_FrostFever, &amp;quot;player&amp;quot;)
and TargetValidation(&amp;quot;target&amp;quot;, PQ_HowlingBlast) then
	CastSpellByName(GetSpellInfo(PQ_HowlingBlast), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Plague Strike (no debuff)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_PlagueStrike = PQ_PlagueStrike
local PQ_BloodPlague = PQ_BloodPlague
local TargetValidation = TargetValidation

if PQ_CanCast
and not UnitDebuffID(&amp;quot;target&amp;quot;, PQ_BloodPlague, &amp;quot;player&amp;quot;)
and UnholyRunes &amp;gt; 0
and TargetValidation(&amp;quot;target&amp;quot;, PQ_PlagueStrike) then
	CastSpellByName(GetSpellInfo(PQ_PlagueStrike), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Outbreak</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_FrostFever = PQ_FrostFever
local PQ_BloodPlague = PQ_BloodPlague
local PQ_Outbreak = PQ_Outbreak
local TargetValidation = TargetValidation

if PQ_CanCast == false then return false end

local FF,_,_,_,_,_,FFtimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_FrostFever,&amp;quot;player&amp;quot;)
local BP,_,_,_,_,_,BPtimer = UnitDebuffID(&amp;quot;target&amp;quot;,PQ_BloodPlague,&amp;quot;player&amp;quot;)

if BP and FF then
	if (FFtimer - GetTime() &amp;lt; 3
	or BPtimer - GetTime() &amp;lt; 3)
	and TargetValidation(&amp;quot;target&amp;quot;, PQ_Outbreak) then
		CastSpellByName(GetSpellInfo(PQ_Outbreak), &amp;quot;target&amp;quot;)
		PQ_ShouldPestilence = true
		return true
	end
else
	if TargetValidation(&amp;quot;target&amp;quot;, PQ_Outbreak) then
--		SpellCancelQueuedSpell()
		CastSpellByName(GetSpellInfo(PQ_Outbreak), &amp;quot;target&amp;quot;)
		PQ_ShouldPestilence = true
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Debug</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (IsLeftShiftKeyDown() and not GetCurrentKeyBoardFocus()) then
	if UnitExists(&amp;quot;focus&amp;quot;) then
		print(UnitCastingInfo(&amp;quot;focus&amp;quot;))
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blood Tap (&amp;gt;10 and RP &amp;gt; 76 or KM)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_BloodCharge = PQ_BloodCharge
local PQ_KillingMachine = PQ_KillingMachine
local PQ_BloodTap = PQ_BloodTap
local TargetValidation = TargetValidation

if HalfDepleted == 0 then return false end

local charges = select(4, UnitBuffID(&amp;quot;player&amp;quot;, PQ_BloodCharge))

if PQ_CanBT
and charges and charges &amp;gt; 10
and (RunicPower &amp;gt; 76 or (RunicPower &amp;gt;= 20 and UnitBuffID(&amp;quot;player&amp;quot;, PQ_KillingMachine))) then
	PQ_BTCD = GetTime() + 0.1
	PQ_CanBT = false
	CastSpellByName(GetSpellInfo(PQ_BloodTap), &amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Obliterate (Unholy &amp;gt; 1)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Obliterate = PQ_Obliterate
local TargetValidationMelee = TargetValidationMelee

if PQ_CanCast
and UnholyRunes == 2
and TargetValidationMelee(&amp;quot;target&amp;quot;, PQ_Obliterate) then
	CastSpellByName(GetSpellInfo(PQ_Obliterate), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Obliterate (Unholy &amp;gt; 0)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Obliterate = PQ_Obliterate
local TargetValidationMelee = TargetValidationMelee

if PQ_CanCast
and UnholyRunes == 1
and TargetValidationMelee(&amp;quot;target&amp;quot;, PQ_Obliterate) then
	CastSpellByName(GetSpellInfo(PQ_Obliterate), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Howling Blast (Death &amp;gt; 1 or Frost &amp;gt; 1)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_HowlingBlast = PQ_HowlingBlast
local TargetValidation = TargetValidation

if PQ_CanCast
and PQ_HB and (FrostRunes == 2 or DeathRunes == 2)
and TargetValidation(&amp;quot;target&amp;quot;, PQ_HowlingBlast) then
	CastSpellByName(GetSpellInfo(PQ_HowlingBlast), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Plague Leech</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_PlagueLeech = PQ_PlagueLeech
local PQ_FrostFever = PQ_FrostFever
local PQ_BloodPlague = PQ_BloodPlague
local TargetValidation = TargetValidation

if PQ_CanCast == false then return false end
if not PQR_SpellAvailable(PQ_PlagueLeech) then return false end
if FullyDepleted == 0 then return false end

if UnitDebuffID(&amp;quot;target&amp;quot;,PQ_FrostFever,&amp;quot;player&amp;quot;)
and UnitDebuffID(&amp;quot;target&amp;quot;,PQ_BloodPlague,&amp;quot;player&amp;quot;)
and TargetValidation(&amp;quot;target&amp;quot;, PQ_PlagueLeech) then
	CastSpellByName(GetSpellInfo(PQ_PlagueLeech), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blood Tap (Soul Reaper)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_BloodTap = PQ_BloodTap
local PQ_SoulReaper = PQ_SoulReaper
local PQ_BloodCharge = PQ_BloodCharge

if HalfDepleted == 0 then return false end

if TargetHP &amp;lt;= 45 then
	local charges = select(4, UnitBuffID(&amp;quot;player&amp;quot;, PQ_BloodCharge))
	
	if PQ_CanBT
	and charges and charges &amp;gt;= 5
	and PQ_SoulReaperCD &amp;lt;= GetTime() then
		PQ_BTCD = GetTime() + 0.1
		PQ_CanBT = false
		CastSpellByName(GetSpellInfo(PQ_BloodTap), &amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Soul Reaper</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_SoulReaper = PQ_SoulReaper
local TargetValidationMelee = TargetValidationMelee

if PQ_CanCast
and TargetHP &amp;lt;= 45
and TargetValidationMelee(&amp;quot;target&amp;quot;, PQ_SoulReaper) then
	CastSpellByName(GetSpellInfo(PQ_SoulReaper), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blood Tap (&amp;gt;= 8 or Calc &amp;gt; 35)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_BloodCharge = PQ_BloodCharge
local PQ_KillingMachine = PQ_KillingMachine
local PQ_BloodTap = PQ_BloodTap
local TargetValidation = TargetValidation

if HalfDepleted == 0 then return false end

local charges = select(4, UnitBuffID(&amp;quot;player&amp;quot;, PQ_BloodCharge))

if PQ_CanBT
and charges and charges &amp;gt;= 5 then
	if TargetHP &amp;gt; 45 or charges &amp;gt;= 8 then
		PQ_BTCD = GetTime() + 0.1
		PQ_CanBT = false
		CastSpellByName(GetSpellInfo(PQ_BloodTap), &amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Pestilence</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Pestilence = PQ_Pestilence
local PQ_FrostFever = PQ_FrostFever
local PQ_BloodPlague = PQ_BloodPlague
local TargetValidationMelee = TargetValidationMelee

if PQ_CanCast
and PQ_ShouldPestilence == true
and UnitDebuffID(&amp;quot;target&amp;quot;,PQ_BloodPlague,&amp;quot;player&amp;quot;)
and TargetValidationMelee(&amp;quot;target&amp;quot;, PQ_Pestilence) then
	CastSpellByName(GetSpellInfo(PQ_Pestilence), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Selfheal</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--if PlayerHP &amp;lt;= 50 then
--	if TargetValidationMelee(&amp;quot;target&amp;quot;, PQ_DeathStrike) then
--		CastSpellByName(GetSpellInfo(PQ_DeathStrike), &amp;quot;target&amp;quot;)
--		return true
--	end
--end
local PQ_GiftOfTheNaaru = PQ_GiftOfTheNaaru

if IsSpellKnown(PQ_GiftOfTheNaaru) then
	if UnitBuffID(&amp;quot;player&amp;quot;, PQ_GiftOfTheNaaru) and PlayerHP &amp;gt; 30 then
		return false
	end
	
	if PlayerHP &amp;lt;= 60 and PQR_SpellAvailable(PQ_GiftOfTheNaaru) then
		CastSpellByName(GetSpellInfo(PQ_GiftOfTheNaaru), &amp;quot;player&amp;quot;)
		return true
	end
end

if PlayerHP &amp;lt;= 45 then
	local _,ghoul = GetTotemInfo(1)
	local PQ_DeathPact = PQ_DeathPact
	
	if ghoul ~= nil
	and ghoul ~= &amp;quot;&amp;quot;
	and PQR_SpellAvailable(PQ_DeathPact) then
		CastSpellByName(GetSpellInfo(PQ_DeathPact), &amp;quot;player&amp;quot;)
		return true
	end
	
	local PQ_HealthStoneItem = PQ_HealthStoneItem
	
	if PlayerHP &amp;lt;= 35
	and GetItemCount(PQ_HealthStoneItem,false,true) &amp;gt; 0
	and GetItemCooldown(PQ_HealthStoneItem) == 0 then
		UseItemByName(PQ_HealthStoneItem, &amp;quot;player&amp;quot;)
		return true
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[Misc] Bossmod</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_IcyTouch = PQ_IcyTouch
local PQ_ImpalingSpear = PQ_ImpalingSpear
local PQ_AMS = PQ_AMS
local GetSpellInfo = GetSpellInfo
local UnitCastingInfo = UnitCastingInfo
local TryPurge = true

--Implement PQR_resumeAttack.. this is used to prevent
--abilities lower in the rotation from being cast.
if PQR_resumeAttack == nil then
    PQR_resumeAttack = 0
elseif PQR_resumeAttack &amp;gt; GetTime() then
    return true
else
    PQR_resumeAttack = 0
end


--IMPORTANT: Change this if you have any cleaves that would do damage to a secondary target
--as part of your single target rotation. Better to be safe than sorry! 
--Used for : Spirit Kings
local cleaveClass = true
local isAOE = strmatch(strupper(PQR_RotationName), &amp;quot;AOE&amp;quot;) --checks if we are in AOE mode.

for i=1,4 do
    local bossCheck = &amp;quot;boss&amp;quot;..i

    if UnitExists(bossCheck) then
        local npcID = tonumber(UnitGUID(bossCheck):sub(6,10), 16)
        local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(bossCheck)
        local icyPurge = GlyphCheck(58631)
        
        ------------------------------------------------------------
        ----------------------- Tier 15 Raids ----------------------
        ------------------------------------------------------------
        
        if npcID == 69078 or npcID == 69134 or npcID == 69131 or npcID == 69132 then -- Council
        
	        local sandBolt = GetSpellInfo(136189)
	        local wrathOfLoa = GetSpellInfo(137344)
	        
	        if PQ_CanMindFreeze
	        and (bossCasting == sandBolt or bossCasting == wrathOfLoa)
	        and IsSpellInRange(GetSpellInfo(PQ_PlagueStrike), bossCheck) == 1 then
	        	CastSpellByName(GetSpellInfo(PQ_MindFreeze), bossCheck)
	        	return true
	        end
	        
	        local targetCasting = UnitCastingInfo(&amp;quot;target&amp;quot;)
	        
	        if PQ_CanMindFreeze
	        and (targetCasting == sandBolt or targetCasting == wrathOfLoa)
	        and IsSpellInRange(GetSpellInfo(PQ_PlagueStrike), &amp;quot;target&amp;quot;) == 1 then
	        	CastSpellByName(GetSpellInfo(PQ_MindFreeze), &amp;quot;target&amp;quot;)
	        	return true
	        end
        
        elseif npcID == 68476 then -- Horridon
        	
        	local venomBolt = GetSpellInfo(136587)
        	local chainLightning = GetSpellInfo(136480)
        	
        	if UnitExists(&amp;quot;focus&amp;quot;)
        	and (UnitCastingInfo(&amp;quot;focus&amp;quot;) == venomBolt
        	or UnitCastingInfo(&amp;quot;focus&amp;quot;) == chainLightning) then
	       		if PQR_SpellAvailable(PQ_MindFreeze)
	       		and IsSpellInRange(GetSpellInfo(PQ_PlagueStrike), &amp;quot;focus&amp;quot;) == 1 then
	       			CastSpellByName(GetSpellInfo(PQ_MindFreeze), &amp;quot;focus&amp;quot;)
	        		return true
	        	end
        	end
        	
        	if UnitCastingInfo(&amp;quot;target&amp;quot;) == venomBolt
        	or UnitCastingInfo(&amp;quot;target&amp;quot;) == chainLightning then
	       		if PQR_SpellAvailable(PQ_MindFreeze)
	       		and IsSpellInRange(GetSpellInfo(PQ_PlagueStrike), &amp;quot;target&amp;quot;) == 1 then
	       			CastSpellByName(GetSpellInfo(PQ_MindFreeze), &amp;quot;target&amp;quot;)
	        		return true
	        	end
       		end
        
        ------------------------------------------------------------
        ----------------------- Tier 14 Raids ----------------------
        ------------------------------------------------------------
        
        elseif npcID == 62837 then -- Grand Empress Shek&amp;apos;zeer
        
        	local vision = select(7, UnitDebuffID(&amp;quot;player&amp;quot;, 124862)) -- Vision of Demise
        
        	if vision and vision - GetTime() &amp;lt;= 2
        	and PQR_SpellAvailable(PQ_AMS) then
        		CastSpellByName(GetSpellInfo(PQ_AMS), &amp;quot;player&amp;quot;)
        		return true
        	end
        	
        	if PQ_PlayerRace == &amp;quot;Human&amp;quot;
        	and UnitDebuffID(&amp;quot;player&amp;quot;, 124863) -- Vision of Demise Proc
        	and PQR_SpellAvailable(PQ_EveryManForHimself) then
        		CastSpellByName(GetSpellInfo(PQ_EveryManForHimself), &amp;quot;player&amp;quot;)
        		return true
        	end
        
        elseif npcID == 62397 then -- Wind Lord Mel&amp;apos;jarak
        	local mending = GetSpellInfo(122193)
        	
        	if UnitExists(&amp;quot;focus&amp;quot;) then
        		local impalingDebuff = select(7, UnitDebuffID(&amp;quot;focus&amp;quot;, PQ_ImpalingSpear, &amp;quot;player&amp;quot;))
        		
        		if impalingDebuff and impalingDebuff - GetTime() &amp;lt; 5 then
        			if PQ_CanCast
        			and PQ_CanImpalingSpear then
        				if GetSpellInfo(PQ_ImpalingSpear) == UnitCastingInfo(&amp;quot;player&amp;quot;) then
        					return true -- pause rotation while casting Impaling Spear
        				end
        				RunMacroText(&amp;quot;/target [@focus]&amp;quot;)
        				RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
        				RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)
        				return true
        			end
        		end
        		
        		if UnitCastingInfo(&amp;quot;focus&amp;quot;) == mending
        		and PQR_SpellAvailable(PQ_MindFreeze) then
        			CastSpellByName(GetSpellInfo(PQ_MindFreeze), &amp;quot;focus&amp;quot;)
        			return true
        		end
       		end
       		
       		if UnitCastingInfo(&amp;quot;target&amp;quot;) == mending
       		and PQR_SpellAvailable(PQ_MindFreeze) then
       			CastSpellByName(GetSpellInfo(PQ_MindFreeze), &amp;quot;target&amp;quot;)
        		return true
       		end
       		
       		if PQ_PlayerRace == &amp;quot;Human&amp;quot;
        	and UnitDebuffID(&amp;quot;player&amp;quot;, 121885) -- Amber Prison
        	and PQR_SpellAvailable(PQ_EveryManForHimself) then
        		CastSpellByName(GetSpellInfo(PQ_EveryManForHimself), &amp;quot;player&amp;quot;)
        		return true
        	end
        
       	elseif npcID == 62983 then -- Lei Shi
        
        	if UnitBuffID(&amp;quot;target&amp;quot;, 123250)
        	and UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck) then
        		return true
        	end
        
      	elseif npcID == 60583 or npcID == 60583 or npcID == 60585 then -- Protectors
        
        	local prison = select(7, UnitDebuffID(&amp;quot;player&amp;quot;, 111850)) -- Lightning Prison
        
        	if prison and prison - GetTime() &amp;lt;= 2
        	and PQR_SpellAvailable(PQ_AMS) then
        		CastSpellByName(GetSpellInfo(PQ_AMS), &amp;quot;player&amp;quot;)
        		return true
        	end
        	
        	if PQ_PlayerRace == &amp;quot;Human&amp;quot;
        	and UnitDebuffID(&amp;quot;player&amp;quot;, 117436) -- Lightning Prison
        	and PQR_SpellAvailable(PQ_EveryManForHimself) then
        		CastSpellByName(GetSpellInfo(PQ_EveryManForHimself), &amp;quot;player&amp;quot;)
        		return true
        	end
        	
        	if PQ_CanCast
        	and icyPurge == true
        	and UnitBuffID(bossCheck, 117283) -- Cleansing Waters
        	and TargetValidationMelee(bossCheck, PQ_IcyTouch)
        	and TryPurge == true then
        		CastSpellByName(GetSpellInfo(PQ_IcyTouch), bossCheck)
        		return true
        	end
        
        elseif npcID == 62511 or npcID == 62711 then --Amber-Shaper Un&amp;apos;sok or Amber Monstrosity
            local reshapeLife = UnitDebuffID(&amp;quot;player&amp;quot;, 122370)
            
            if reshapeLife then
                local playerCasting = UnitCastingInfo(&amp;quot;player&amp;quot;)
                --grab spell names for abilities:
                local amberExplosion = GetSpellInfo(122402)
                
                --interrupt self if casting amber explosion
                if playerCasting == amberExplosion then
                    --Press the 2nd button (Struggle for Control)
                    RunMacroText(&amp;quot;/click &amp;quot;..PQR_OverrideActionBarButton2)
                    return true
                end
                
                --interrupt the target if casting amber explosion
                if bossCasting and bossCasting == amberExplosion then
                    TargetUnit(bossCheck)
                    --Press the 1st button (Amber Strike)
                    RunMacroText(&amp;quot;/click &amp;quot;..PQR_OverrideActionBarButton1)
                    return true
                end
                
                if UnitExists(&amp;quot;boss2&amp;quot;) then
                    if bossCheck == &amp;quot;boss2&amp;quot; then 
                        return true --prevent the rotation from executing while reshaped
                    end
                else
                    return true
                end

            end
            
            if UnitBuffID(&amp;quot;target&amp;quot;, 122540) then -- Amber Carapace
        		return true
        	end
            
        elseif npcID == 60709 then --Spirit Kings: Qiang. (Impervious Shield)
            --Stop all attacks until 0.2 seconds after cast time ends and until buff (Impervious Shield) is gone.
            
            --only continue checking if we are targetting the boss or have no target.
            if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
                local impName = GetSpellInfo(117961)
                local impShieldBuff = UnitBuffID(bossCheck, 117961)
                
                if (bossCasting and bossCasting == impName) then
                	local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
                	if (delayAdd &amp;lt;= 0.5) then
                   		StopAttack()
                    	SpellStopCasting()
                    	PQR_resumeAttack = GetTime() + delayAdd + 0.2
                    	return true
                    end
                    return false
                end
                
                if impShieldBuff then
                    StopAttack()
                    SpellStopCasting()
                    return true
                end
            end
            
        elseif npcID == 60710 then --Spirit Kings: Subetai. (Sleight of Hand)
            --Stop all attacks when casting Sleight of Hand, and until 0.2 seconds after cast time ends.
            --Also stop attacks if not stunned.
            
            --only continue checking if we are targetting the boss or have no target.
            if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
                local sleightName = GetSpellInfo(118162)
                local sleightBuff = UnitBuffID(bossCheck, 118162)
                --                  HoJ,   FoJ,  Kidney  
                local stunList = { 853, 105593, 408 }
                local isStunned = nil
                for _,v in ipairs(stunList) do
                    local debuffCheck = UnitDebuffID(bossCheck, v)
                    if debuffCheck then
                        isStunned = true
                        break
                    end
                end
                
                if (bossCasting and bossCasting == sleightName) then
                	local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
                	if (delayAdd &amp;lt;= 0.5) then
                   		StopAttack()
                    	SpellStopCasting()
                    	PQR_resumeAttack = GetTime() + delayAdd + 0.2
                    	return true
                    end
                    return false
                end
                
                if sleightBuff and not isStunned then
                    StopAttack()
                    SpellStopCasting()
                    return true
                end
            end

        elseif npcID == 60701 then --Spirit Kings: Zian. (Shield of Darkness)
            --Stop all attacks until 0.5 seconds after cast time ends and until buff (Shield of Darkness) is gone.
                        
            if (not UnitExists(&amp;quot;target&amp;quot;)) or (UnitIsUnit(&amp;quot;target&amp;quot;, bossCheck)) or (cleaveClass or isAOE) then
                local sodName = GetSpellInfo(117697)
                local sodBuff = UnitBuffID(bossCheck, 117697)
                
                if (bossCasting and bossCasting == sodName) then
                	local delayAdd = (castEnd/1000) - GetTime() --the number of seconds remaining on the cast.
                	if (delayAdd &amp;lt;= 0.5) then
                   		StopAttack()
                    	SpellStopCasting()
                    	PQR_resumeAttack = GetTime() + delayAdd + 0.4
                    	return true
                    end
                    return false
                end
                
                if sodBuff then
                    StopAttack()
                    SpellStopCasting()
                    return true
                end
            end
        end
    end
end

local returnSoul = select(7 ,UnitDebuffID(&amp;quot;player&amp;quot;, 116161))
if returnSoul and returnSoul - GetTime() &amp;lt;= 2 then 
    RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;) 
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blood Tap (filler)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_BloodCharge = PQ_BloodCharge
local PQ_KillingMachine = PQ_KillingMachine
local PQ_BloodTap = PQ_BloodTap
local TargetValidation = TargetValidation

if HalfDepleted == 0 then return false end

local charges = select(4, UnitBuffID(&amp;quot;player&amp;quot;, PQ_BloodCharge))

if PQ_CanBT
and charges and charges &amp;gt;= 5 then
	PQ_BTCD = GetTime() + 0.1
	PQ_CanBT = false
	CastSpellByName(GetSpellInfo(PQ_BloodTap), &amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Obliterate (Unholy &amp;gt; 0 and no KM)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_Obliterate = PQ_Obliterate
local TargetValidationMelee = TargetValidationMelee
local PQ_KillingMachine = PQ_KillingMachine

if PQ_CanCast
and UnholyRunes &amp;gt; 0
and not UnitBuffID(&amp;quot;player&amp;quot;, PQ_KillingMachine)
and TargetValidationMelee(&amp;quot;target&amp;quot;, PQ_Obliterate) then
	CastSpellByName(GetSpellInfo(PQ_Obliterate), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Blood Tap (&amp;gt;10)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_BloodCharge = PQ_BloodCharge
local PQ_BloodTap = PQ_BloodTap
local TargetValidation = TargetValidation

if HalfDepleted == 0 then return false end

local charges = select(4, UnitBuffID(&amp;quot;player&amp;quot;, PQ_BloodCharge))

if PQ_CanBT
and charges and charges &amp;gt; 10 then
	PQ_BTCD = GetTime() + 0.1
	PQ_CanBT = false
	CastSpellByName(GetSpellInfo(PQ_BloodTap), &amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Plague Strike (Unholy = 2)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_PlagueStrike = PQ_PlagueStrike
local TargetValidation = TargetValidation

if PQ_CanCast
and UnholyRunes == 2
and TargetValidation(&amp;quot;target&amp;quot;, PQ_PlagueStrike) then
	CastSpellByName(GetSpellInfo(PQ_PlagueStrike), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Frost Strike</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_FrostStrike = PQ_FrostStrike
local TargetValidationMelee = TargetValidationMelee

if PQ_CanCast
and TargetValidationMelee(&amp;quot;target&amp;quot;, PQ_FrostStrike) then
	CastSpellByName(GetSpellInfo(PQ_FrostStrike), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Plague Leech (Unholy = 1)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_PlagueLeech = PQ_PlagueLeech
local PQ_FrostFever = PQ_FrostFever
local PQ_BloodPlague = PQ_BloodPlague
local TargetValidation = TargetValidation

if PQ_CanCast == false then return false end
if not PQR_SpellAvailable(PQ_PlagueLeech) then return false end
if FullyDepleted == 0 then return false end

if UnholyRunes == 1
and UnitDebuffID(&amp;quot;target&amp;quot;,PQ_FrostFever,&amp;quot;player&amp;quot;)
and UnitDebuffID(&amp;quot;target&amp;quot;,PQ_BloodPlague,&amp;quot;player&amp;quot;)
and TargetValidation(&amp;quot;target&amp;quot;, PQ_PlagueLeech) then
	CastSpellByName(GetSpellInfo(PQ_PlagueLeech), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>Plague Strike (Unholy = 1)</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>local PQ_PlagueStrike = PQ_PlagueStrike
local TargetValidation = TargetValidation

if PQ_CanCast
and UnholyRunes == 1
and TargetValidation(&amp;quot;target&amp;quot;, PQ_PlagueStrike) then
	CastSpellByName(GetSpellInfo(PQ_PlagueStrike), &amp;quot;target&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></DEATHKNIGHT>